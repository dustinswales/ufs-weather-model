matchedNode = []
generateBaselineNode = []
for (label in pullRequest.labels) {
   listOfLabelNodeNames = jenkins.model.Jenkins.instance.nodes.collect {
   node -> node.getLabelString().contains(label) ? node.name : null

   if ((label.matches(node.getLabelString()+"-(.*)"))) {
     matchedNode += node.getLabelString()
   }

   if ((label.matches(node.getLabelString()+"(.*)-BL"))) {
     generateBaselineNode += node.getLabelString() 
   }

 }
}

modifiedLabels = matchedNode.collect{"'" + it + "'"} 
baselineLabels = generateBaselineNode.collect{"'" + it + "'"} 
def generateStage(nodeLabel) {
    return {
        stage("Running on ${nodeLabel}") {
            node(nodeLabel) {
               cleanWs()
               checkout scm
               script {
                    echo "Running on ${nodeLabel}"
                    }
            post {
                always {
                    script {
                        sh "echo post stage"
                    }
                }
                }
              }
            }
       }
}

def parallelStagesMap = modifiedLabels.collectEntries {
    ["${it}" : generateStage(it)]
}

pipeline {
    agent none
    environment {
        ACCNR = 'epic'
        GITHUB_TOKEN = credentials('GithubJenkinsNew')
        GIT_URL = 'https://github.com/ufs-community/ufs-weather-model.git'
    }
    stages {
        stage('Run Tests in Parallel') {
            steps {
                script {
                    parallel parallelStagesMap
                }
            }
        }       
    }
}
